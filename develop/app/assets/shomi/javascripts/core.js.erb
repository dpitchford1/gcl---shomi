//= require vendor/bootstrap-custom
//= require bootstrap-tooltip

/* application wrapper
-------------------------------------------------------------------------------------------------------------------------- */
var gcl = gcl || {};
window.gcl = (function( window, document, gclwrapper ) {

    /* set up a couple helpers
    ---------------------------------------------- */
    //var doc = window.document;
    function setAttributes(el, attrs) {
        for(var key in attrs) {
        el.setAttribute(key, attrs[key]);
        }
    }

  /* Small screen menu
  ---------------------------------------------- */
    (function (win) {
        "use strict";
        var menu = doc.querySelector('#global-header'),
            menulinks = doc.querySelector('#ss-nav'),
            fragment = doc.createDocumentFragment(),
            toggler = fragment.appendChild(doc.createElement('a')),
            ssLogo = fragment.appendChild(doc.createElement('a'));

        setAttributes(menu, {
            "aria-labelledby": "menu-trigger"
        });

        // toggler link
        setAttributes(toggler, {
            "aria-controls": "global-header",
            "href": "#global-header",
            "id": "menu-trigger",
            "aria-label": "<%= I18n.t('menu.main_menu') %>",
            "role": "button",
            "class": "menu-trigger ico i-sm i--menu"
        });
        // create ss logo
        setAttributes(ssLogo, {
            "class": "ico brand-ss",
            "href": "/",
            "id": "menu-trigger"
        });

        toggler.innerHTML = 'Menu';
        ssLogo.innerHTML = 'Rogers NHL GameCentre Live';

        if(window.matchMedia('only screen and (max-width: 600px)').matches){
            menu.setAttribute('aria-expanded', 'false');
        }

        if (doc.querySelector && doc.addEventListener) {

            menulinks.appendChild(fragment);
            menu.className += ' is-hidden';

            toggler.addEventListener('click', function (e) {
                e.preventDefault();
                toggler.className = (toggler.className === 'menu-trigger ico i-sm i--menu') ? 'menu-trigger open ico i-m i--close' : 'menu-trigger ico i-sm i--menu';
                menu.className = (menu.className === 'global-header is-hidden') ? 'global-header is-visible' : 'global-header is-hidden';

                menu.setAttribute('aria-expanded', menu.getAttribute('aria-expanded') === 'true' ? 'false' : 'true');

            });
        }

    }(this));
    // end small screen menu

    /* set up for lazyloading images and video on small screens
    ---------------------------------------------- */
  var Utils = {
    q : function(q, res) {
      if (doc.querySelectorAll) {
        res = doc.querySelectorAll(q);
      } else {
        a = doc.styleSheets[0] || doc.createStyleSheet();
        a.addRule(q,'f:b');
        for(var l=d.all,b=0,c=[],f=l.length;b<f;b++)
        l[b].currentStyle.f && c.push(l[b]);
  
        a.removeRule(0);
        res = c;
      }
      return res;
    }
  };
    function initImages() {
        "use strict";
        var lazy = Utils.q('[data-src]'),
            imgAlt = Utils.q('[data-alt]'),
            imgWidth = Utils.q('[data-width]'),
            imgHeight = Utils.q('[data-height]');
        
        for (var i = 0; i < lazy.length; i++) {
            var source = lazy[i].getAttribute('data-src'),
                alt = imgAlt[i].getAttribute('data-alt'),
                width = imgWidth[i].getAttribute('data-width'),
                height = imgHeight[i].getAttribute('data-height'),
                img = new Image();
            
            //create the image & alt
            img.src = source;
            img.alt = alt;
            img.width = width;
            img.height = height;
            //insert it inside of the span
            lazy[i].insertBefore(img, lazy[i].firstChild);
            imgAlt[i].appendChild(img);
            imgWidth[i].appendChild(img);
            imgHeight[i].appendChild(img);
        }
    }
    // end lazy images

    /* load script and callback
    ---------------------------------------------- */
    function loadScript(url, callback){
        var script = doc.createElement("script");

        if (script.readyState){  //IE
            script.onreadystatechange = function(){
                if (script.readyState == "loaded" ||
                    script.readyState == "complete"){
                  script.onreadystatechange = null;
                  callback();
                }
            };
        } else {  //Others
            script.onload = function(){
            callback();
            };
        }
        script.src = url;
        doc.getElementsByTagName("head")[0].appendChild(script);
    }
    // end loadScript
    
    /* video onclick, do this and that
    ---------------------------------------------- */
    function videoInit(url, callback) {
        'use-strict';
        var videoPlay = doc.getElementById('video-play'),
            parentWrap = doc.getElementById('video-parent'),
            vidWrap = doc.getElementById('vid-wrap'),
            body = doc.getElementsByTagName('body')[0],

            playClose = doc.getElementById('video-close');

        var closePlayer = function(v) {
            setAttributes(vidWrap, { "class": "vid-wrap hidden" });
            body.className = body.className.replace(/ video-load/g,'');
            setAttributes(parentWrap, { "class": "video-promo" });
            setAttributes(videoPlay, { "href": "#myExperience", "class": "flex-embed flex-embed--16by9 feature-video" });

            // Force-pause. IE/Mobile players still has the video playing despite being hidden
            if (typeof window.shomiPlayer !== 'undefined') {
                 window.shomiPlayer.pause();
            }
            var eventTrigger = new Event('playerClosed');
                parentWrap.dispatchEvent(eventTrigger);
        }

        var openPlayer = function(e) {
            loadScript("https://sadmin.brightcove.com/js/BrightcoveExperiences.js", function(){
                    setAttributes(vidWrap, { "class": "vid-wrap block" });

                    videoPlay.removeAttribute('href');

                    parentWrap.className += " video-loaded";
                    body.className += " video-load";
                    videoPlay.className += " video-active";
                    videoPlay.onclick = null;
                    
                     var eventTrigger = new Event('playerLoaded');
                    parentWrap.dispatchEvent(eventTrigger);
                    brightcove.createExperiences();

                });
           
            // Play. IE still has the video playing despite being hidden
            if (typeof window.shomiPlayer !== 'undefined') {
                console.log(window.shomiPlayer);
                 window.shomiPlayer.play();
            }
        }


        if (doc.querySelector && doc.addEventListener) {
            playClose.addEventListener('click', function (v) {
                v.preventDefault();
                closePlayer();    
            });

            videoPlay.addEventListener('click', function (e) {
                e.preventDefault();
                openPlayer();
            });
        }
    }
    // end videoInit


    /* touch - pointer check
    ---------------------------------------------- */
    function touchEvents() {
    
        var supportsTouch = false;
        if ('ontouchstart' in window) {
            //iOS & android
            supportsTouch = true;

            doc.documentElement.className = doc.documentElement.className.replace(/\bno-touch\b/g, '') + ' touch';
            //alert('boing! iOS & Android');

            /* A fix for the iOS orientationchange zoom bug. Script by @scottjehl, rebound by @wilto. MIT / GPLv2 License.  */
            (function(){

                // This fix addresses an iOS bug, so return early if the UA claims it's something else.
                var ua = navigator.userAgent;
                if( !( /iPhone|iPad|iPod/.test( navigator.platform ) && /OS [1-5]_[0-9_]* like Mac OS X/i.test(ua) && ua.indexOf( "AppleWebKit" ) > -1 ) ){
                    return;
                }

                if( !doc.querySelector ){ return; }

                var meta = doc.querySelector( "meta[name=viewport]" ),
                    initialContent = meta && meta.getAttribute( "content" ),
                    disabledZoom = initialContent + ",maximum-scale=1",
                    enabledZoom = initialContent + ",maximum-scale=10",
                    enabled = true,
                    x, y, z, aig;

                if( !meta ){ return; }

                function restoreZoom(){
                    meta.setAttribute( "content", enabledZoom );
                    enabled = true;
                }

                function disableZoom(){
                    meta.setAttribute( "content", disabledZoom );
                    enabled = false;
                }

                function checkTilt( e ){
                    aig = e.accelerationIncludingGravity;
                    x = Math.abs( aig.x );
                    y = Math.abs( aig.y );
                    z = Math.abs( aig.z );

                    // If portrait orientation and in one of the danger zones
                    if( (!w.orientation || w.orientation === 180) && ( x > 7 || ( ( z > 6 && y < 8 || z < 8 && y > 6 ) && x > 5 ) ) ){
                        if( enabled ){
                            disableZoom();
                        }
                    }
                    else if( !enabled ){
                        restoreZoom();
                    }
                }

                w.addEventListener( "orientationchange", restoreZoom, false );
                w.addEventListener( "devicemotion", checkTilt, false );

            })( this );
            // end orientation fix

        } else if (window.navigator.msPointerEnabled) {
            //Win8
            supportsTouch = true;

            doc.documentElement.className = doc.documentElement.className.replace(/\bno-touch\b/g, '') + ' touch';
            //alert('bang!!! windows8');

        } else if (supportsTouch === false){

            doc.documentElement.className = doc.documentElement.className.replace(/\bno-touch\b/g, '') + ' no-touch';
            //alert('cool beans! do not support touch');
        }
    }
    // end touchEvents

    /* load'em up! & execute!
    -------------------------------------------------------------------------------------------------------------------------- */
    /* if video-play is found... */
    if (doc.getElementById("video-play")) {
        videoInit();
    }
    /* always load touch events */
    touchEvents();

    if (doc.getElementById("gcl-features")) {

        if(window.matchMedia('only screen and (min-width: 299px)').matches){
            addLoadEvent(initImages);
        }

    } else if(doc.getElementById("gcl-devices")) {

        if(window.matchMedia('only screen and (min-width: 481px)').matches){
            addLoadEvent(initImages);
        }
    }

    /* if min width is 299px -- load images */
    // if (doc.getElementById("gcl-features")) {
    //     if(window.matchMedia('only screen and (min-width: 299px)').matches){
    //         addLoadEvent(initImages);
    //     }
    //     else if(doc.getElementById("gcl-devices")) {
    //         if(window.matchMedia('only screen and (min-width: 299px)').matches){
    //             addLoadEvent(initImages);
    //         }
    //     }
    // }

  ///* inject analytics scripts
  //---------------------------------------------- */
  //addLoadEvent(loadAnalytics);

})(this, this.document);
